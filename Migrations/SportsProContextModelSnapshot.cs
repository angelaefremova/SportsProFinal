// <auto-generated />
using System;
using GBCSporting_LAIR.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBCSporting_LAIR.Migrations
{
    [DbContext(typeof(SportsProContext))]
    partial class SportsProContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GBCSporting_LAIR.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Brunei"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 20,
                            Name = "China"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Czechia (Czech Republic)"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Democratic Republic of the Congo"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 31,
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 35,
                            Name = "France"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 40,
                            Name = "India"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Iran"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Israel"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Macedonia"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 52,
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 53,
                            Name = "North Korea"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 62,
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 63,
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Syria"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Tanzania"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 72,
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 73,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 74,
                            Name = "United States of America"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Wakanda"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Wonderland (Your name must be Alice)"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "",
                            City = "San Francisco",
                            CountryId = 74,
                            Email = "kanthoni@pge.com",
                            FirstName = "Kaitlyn",
                            LastName = "Anthoni",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "",
                            City = "Washington",
                            CountryId = 74,
                            Email = "ania@mma.nidc.com",
                            FirstName = "Ania",
                            LastName = "Irvin",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "",
                            City = "Mission Veijo",
                            CountryId = 18,
                            Email = "",
                            FirstName = "Gonzalo",
                            LastName = "Keeton",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "",
                            City = "Sacramento",
                            CountryId = 42,
                            Email = "amauro@yahoo.org",
                            FirstName = "Anton",
                            LastName = "Mauro",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "",
                            City = "Fresno",
                            CountryId = 35,
                            Email = "kmayte@fresno.ca.gov",
                            FirstName = "Kendall",
                            LastName = "Mayte",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 6,
                            Address = "",
                            City = "Los Angeles",
                            CountryId = 79,
                            Email = "kenzie@mma.jobtrak.com",
                            FirstName = "Kenzie",
                            LastName = "Quinn",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        },
                        new
                        {
                            CustomerId = 7,
                            Address = "",
                            City = "Fresno",
                            CountryId = 78,
                            Email = "marvin@expedata.com",
                            FirstName = "Marvin",
                            LastName = "Quintin",
                            Phone = "",
                            PostalCode = "",
                            Province = ""
                        });
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianViewModelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.HasIndex("TechnicianViewModelId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("YearlyPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "TRNY10",
                            Name = "Tournament Master 1.0",
                            ReleasedDate = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "LEAG10",
                            Name = "League Scheduler 1.0",
                            ReleasedDate = new DateTime(2016, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "LEAGD10",
                            Name = "League Scheduler Deluxe 1.0",
                            ReleasedDate = new DateTime(2016, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 7.9900000000000002
                        },
                        new
                        {
                            ProductId = 4,
                            Code = "DRAFT10",
                            Name = "Draft Manager 1.0",
                            ReleasedDate = new DateTime(2017, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 5,
                            Code = "TEAM10",
                            Name = "Team Manager 1.0",
                            ReleasedDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 6,
                            Code = "TRNY20",
                            Name = "Tournament Master 2.0",
                            ReleasedDate = new DateTime(2018, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 5.9900000000000002
                        },
                        new
                        {
                            ProductId = 7,
                            Code = "DRAFT20",
                            Name = "Draft Manager 2.0",
                            ReleasedDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 5.9900000000000002
                        });
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Registration", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cell = "800-555-0443",
                            Email = "alison@sportsprosoftware.com",
                            Name = "Alison Diaz"
                        },
                        new
                        {
                            Id = 2,
                            Cell = "800-555-0449",
                            Email = "awilson@sportsprosoftware.com",
                            Name = "Andrew Wilson"
                        },
                        new
                        {
                            Id = 3,
                            Cell = "800-555-0459",
                            Email = "gfiori@sportsprosoftware.com",
                            Name = "Gina Fiori"
                        },
                        new
                        {
                            Id = 4,
                            Cell = "800-555-0400",
                            Email = "gunter@sportsprosoftware.com",
                            Name = "Gunter Wendt"
                        },
                        new
                        {
                            Id = 5,
                            Cell = "800-555-0444",
                            Email = "jason@sportsprosoftware.com",
                            Name = "Jason Lee"
                        });
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.CustomerViewModels.AddCustomerViewModel", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CountryId");

                    b.ToTable("AddCustomerViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.CustomerViewModels.CustomerViewModel", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CountryId");

                    b.ToTable("CustomerViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.ProductViewModels.AddProductViewModel", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("YearlyPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("AddProductViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.ProductViewModels.ProductViewModel", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("YearlyPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("ProductViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.TechnicianViewModels.AddTechnicianViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AddTechnicianViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.TechnicianViewModels.TechnicianViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechnicianViewModel");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting_LAIR.Models.Technician", null)
                        .WithMany("Incidents")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_LAIR.Models.ViewModels.TechnicianViewModels.TechnicianViewModel", null)
                        .WithMany("Incidents")
                        .HasForeignKey("TechnicianViewModelId");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Registration", b =>
                {
                    b.HasOne("GBCSporting_LAIR.Models.Customer", "Customer")
                        .WithMany("Registrations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_LAIR.Models.Product", "Product")
                        .WithMany("Registrations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.CustomerViewModels.AddCustomerViewModel", b =>
                {
                    b.HasOne("GBCSporting_LAIR.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.CustomerViewModels.CustomerViewModel", b =>
                {
                    b.HasOne("GBCSporting_LAIR.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Customer", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Product", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.Technician", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("GBCSporting_LAIR.Models.ViewModels.TechnicianViewModels.TechnicianViewModel", b =>
                {
                    b.Navigation("Incidents");
                });
#pragma warning restore 612, 618
        }
    }
}
